[{"C:\\Users\\91815\\OneDrive\\Desktop\\project\\OMG_GUI\\src\\index.js":"1","C:\\Users\\91815\\OneDrive\\Desktop\\project\\OMG_GUI\\src\\reportWebVitals.js":"2","C:\\Users\\91815\\OneDrive\\Desktop\\project\\OMG_GUI\\src\\App.js":"3","C:\\Users\\91815\\OneDrive\\Desktop\\project\\OMG_GUI\\src\\Components\\home.jsx":"4","C:\\Users\\91815\\OneDrive\\Desktop\\project\\OMG_GUI\\src\\Components\\topMenuBar.jsx":"5","C:\\Users\\91815\\OneDrive\\Desktop\\project\\OMG_GUI\\src\\Components\\addItem.jsx":"6","C:\\Users\\91815\\OneDrive\\Desktop\\project\\OMG_GUI\\src\\Components\\shopByCat.jsx":"7","C:\\Users\\91815\\OneDrive\\Desktop\\project\\OMG_GUI\\src\\Components\\shopByBrand.jsx":"8","C:\\Users\\91815\\OneDrive\\Desktop\\project\\OMG_GUI\\src\\Components\\showItems.jsx":"9","C:\\Users\\91815\\OneDrive\\Desktop\\project\\OMG_GUI\\src\\Components\\item.jsx":"10","C:\\Users\\91815\\OneDrive\\Desktop\\project\\OMG_GUI\\src\\Components\\login.jsx":"11","C:\\Users\\91815\\OneDrive\\Desktop\\project\\OMG_GUI\\src\\Components\\register.jsx":"12"},{"size":565,"mtime":1611149579632,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1611149579636,"results":"15","hashOfConfig":"14"},{"size":2035,"mtime":1612981623656,"results":"16","hashOfConfig":"14"},{"size":331,"mtime":1611261610876,"results":"17","hashOfConfig":"14"},{"size":2975,"mtime":1612350837156,"results":"18","hashOfConfig":"14"},{"size":12296,"mtime":1612807395705,"results":"19","hashOfConfig":"14"},{"size":1664,"mtime":1612981512575,"results":"20","hashOfConfig":"14"},{"size":1501,"mtime":1611261763632,"results":"21","hashOfConfig":"14"},{"size":2704,"mtime":1612981512586,"results":"22","hashOfConfig":"14"},{"size":803,"mtime":1612981512574,"results":"23","hashOfConfig":"14"},{"size":1305,"mtime":1612807742523,"results":"24","hashOfConfig":"14"},{"size":3068,"mtime":1612960942384,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ui5vhc",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"28"},"C:\\Users\\91815\\OneDrive\\Desktop\\project\\OMG_GUI\\src\\index.js",[],["58","59"],"C:\\Users\\91815\\OneDrive\\Desktop\\project\\OMG_GUI\\src\\reportWebVitals.js",[],"C:\\Users\\91815\\OneDrive\\Desktop\\project\\OMG_GUI\\src\\App.js",["60","61"],"C:\\Users\\91815\\OneDrive\\Desktop\\project\\OMG_GUI\\src\\Components\\home.jsx",[],"C:\\Users\\91815\\OneDrive\\Desktop\\project\\OMG_GUI\\src\\Components\\topMenuBar.jsx",["62","63","64","65","66","67","68","69","70","71","72"],"import React, { Component } from 'react'\r\nimport '../css/topMenuBar.css'\r\nimport Image from 'react-bootstrap/Image'\r\nimport {\r\n  NavLink,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n  BrowserRouter,\r\n  Link,\r\n  Router,\r\n} from 'react-router-dom'\r\nimport AddItem from './addItem'\r\n\r\nclass TopMenuBar extends Component {\r\n  state = {}\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-white fixed-top\">\r\n        {/* <li className=\"nav-item\"> */}\r\n        <strong>\r\n          <Link to=\"/\">\r\n            <Image\r\n              src={'./logo/omglogo2.jpg'}\r\n              className=\"pl-1 logoImg\"\r\n              alt=\"LOGO\"\r\n            ></Image>\r\n          </Link>\r\n        </strong>\r\n        {/* </li> */}\r\n        <ul className=\"nav navbar-nav w-50\">\r\n          <li className=\"nav-item p-3\">\r\n            <a className=\"nav-link \" href=\"#\">\r\n              <dt>MEN</dt>\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item p-3\">\r\n            <a className=\"nav-link \" href=\"#\">\r\n              <dt>WOMEN</dt>\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item p-3\">\r\n            <a className=\"nav-link \" href=\"#\">\r\n              <dt>KIDS</dt>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"nav navbar-nav ml-auto\">\r\n          <li className=\"nav-item pt-2 \">\r\n            <form className=\"navbar-form\" role=\"search\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Search\"\r\n                  name=\"srch-term\"\r\n                  id=\"srch-term\"\r\n                />\r\n                <div className=\"input-group-btn\">\r\n                  <button className=\"btn btn-default\" type=\"submit\">\r\n                    <Image\r\n                      src=\"../logo/search.png\"\r\n                      style={{ width: '25px', height: '25px' }}\r\n                    ></Image>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </li>\r\n          <li className=\"nav-item pt-2\">\r\n            <Link to=\"/login\" className=\"nav-link\" href=\"#\">\r\n              <Image\r\n                src=\"../logo/profile_icon.jpg\"\r\n                style={{ width: '25px', height: '25px' }}\r\n              ></Image>\r\n              Profile\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item pt-2\">\r\n            <a className=\"nav-link\" href=\"#\">\r\n              <Image\r\n                src=\"../logo/bag_icon_2.png\"\r\n                style={{ width: '25px', height: '25px', float: 'left' }}\r\n              ></Image>\r\n              Bag\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        <ul>\r\n          <Link to=\"/addItem\" action tag=\"a\">\r\n            Add Item\r\n          </Link>\r\n        </ul>\r\n      </nav>\r\n    )\r\n  }\r\n\r\n  handleClick() {\r\n    window.open('www.google.com', '_blank')\r\n  }\r\n}\r\n\r\nexport default TopMenuBar\r\n","C:\\Users\\91815\\OneDrive\\Desktop\\project\\OMG_GUI\\src\\Components\\addItem.jsx",["73","74","75"],"import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport {\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel,\r\n  Row,\r\n  Col,\r\n  Container,\r\n} from 'react-bootstrap'\r\nimport '../css/addItem.css'\r\n\r\nclass AddItem extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleItemSubmit = this.handleItemSubmit.bind(this)\r\n    this.getSizeQuantityMap = this.getSizeQuantityMap.bind(this)\r\n    this.getSizePriceMap = this.getSizePriceMap.bind(this)\r\n  }\r\n  state = {\r\n    types: [\r\n      {\r\n        id: '',\r\n        name: '',\r\n      },\r\n    ],\r\n    brand: [\r\n      {\r\n        id: '',\r\n        name: '',\r\n      },\r\n    ],\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Container>\r\n              <div className=\"addItemForm\">\r\n                <Form onSubmit={this.handleItemSubmit}>\r\n                  <Form.Group>\r\n                    <Form.Row>\r\n                      <Form.Label column=\"sm\">TYPE</Form.Label>\r\n                      <Col>\r\n                        <Form.Control size=\"sm\" as=\"select\" name=\"itemType\">\r\n                          {this.getAllTypes(this.state.types)}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Row>\r\n                      <Form.Label column=\"sm\">BRAND</Form.Label>\r\n                      <Col>\r\n                        <Form.Control size=\"sm\" as=\"select\" name=\"itemBrand\">\r\n                          {this.getAllTypes(this.state.brand)}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group>\r\n                    <Form.Row>\r\n                      <Form.Label column=\"sm\">NAME</Form.Label>\r\n                      <Col>\r\n                        <Form.Control size=\"sm\" type=\"text\" name=\"itemName\" />\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group>\r\n                    <Form.Row>\r\n                      <Form.Label column=\"sm\">DESCRIPTION</Form.Label>\r\n                      <Col>\r\n                        <Form.Control\r\n                          size=\"sm\"\r\n                          type=\"text\"\r\n                          name=\"description\"\r\n                        />\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Row>\r\n                      <Form.Label column=\"sm\">SECTION</Form.Label>\r\n                      <Col>\r\n                        <Form.Control size=\"sm\" as=\"select\" name=\"itemSection\">\r\n                          <option>MEN</option>\r\n                          <option>WOMEN</option>\r\n                          <option>BOYS</option>\r\n                          <option>GIRLS</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group>\r\n                    <Form.Row>\r\n                      <Form.Label column=\"sm\">SIZE AVAILABLE</Form.Label>\r\n                      <Col>\r\n                        <Form.Control\r\n                          size=\"sm\"\r\n                          type=\"text\"\r\n                          placeholder=\"Enter size in format x,y,z\"\r\n                          name=\"itemSize\"\r\n                        />\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Row>\r\n                      <Form.Label column=\"sm\">\r\n                        QUANTITY AVAILABLE FOR SIZE\r\n                      </Form.Label>\r\n                      <Col>\r\n                        <Form.Control\r\n                          size=\"sm\"\r\n                          type=\"text\"\r\n                          placeholder=\"Enter quantity in format x,y,z\"\r\n                          name=\"itemQuantity\"\r\n                        />\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Row>\r\n                      <Form.Label column=\"sm\">PRICE</Form.Label>\r\n                      <Col>\r\n                        <Form.Control size=\"sm\" type=\"text\" name=\"itemPrice\" />\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Row>\r\n                      <Form.Label column=\"sm\">SELECT IMAGE</Form.Label>\r\n                      <Col>\r\n                        <Form.File name=\"itemImage\" />\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Row>\r\n                      <Form.Label column=\"sm\"></Form.Label>\r\n                      <Col>\r\n                        <Button type=\"submit\">SUBMIT</Button>\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n            </Container>\r\n          </Col>\r\n          <Col>\r\n            <Container>\r\n              <Form onSubmit={this.handleTypeSubmit}>\r\n                <Form.Group>\r\n                  <Form.Row>\r\n                    <Form.Label column=\"sm\">ADD NEW TYPE</Form.Label>\r\n                    <Col>\r\n                      <Form.Control size=\"sm\" type=\"text\" name=\"newType\" />\r\n                    </Col>\r\n                  </Form.Row>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Row>\r\n                    <Form.Label column=\"sm\">\r\n                      SELECT SAMPLE IMAGE FOR NEW TYPE\r\n                    </Form.Label>\r\n                    <Col>\r\n                      <Form.File name=\"typeImage\" />\r\n                    </Col>\r\n                  </Form.Row>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Row>\r\n                    <Form.Label column=\"sm\"></Form.Label>\r\n                    <Col>\r\n                      <Button type=\"submit\">SUBMIT</Button>\r\n                    </Col>\r\n                  </Form.Row>\r\n                </Form.Group>\r\n              </Form>\r\n\r\n              <Form onSubmit={this.handleBrandSubmit}>\r\n                <Form.Group>\r\n                  <Form.Row>\r\n                    <Form.Label column=\"sm\">ADD NEW BRAND</Form.Label>\r\n                    <Col>\r\n                      <Form.Control size=\"sm\" type=\"text\" name=\"newBrand\" />\r\n                    </Col>\r\n                  </Form.Row>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Row>\r\n                    <Form.Label column=\"sm\">\r\n                      SELECT SAMPLE IMAGE FOR NEW BRAND\r\n                    </Form.Label>\r\n                    <Col>\r\n                      <Form.File name=\"brandImage\" />\r\n                    </Col>\r\n                  </Form.Row>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Row>\r\n                    <Form.Label column=\"sm\">SELECT BRAND LOGO</Form.Label>\r\n                    <Col>\r\n                      <Form.File name=\"logoImage\" />\r\n                    </Col>\r\n                  </Form.Row>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Row>\r\n                    <Form.Label column=\"sm\"></Form.Label>\r\n                    <Col>\r\n                      <Button type=\"submit\">SUBMIT</Button>\r\n                    </Col>\r\n                  </Form.Row>\r\n                </Form.Group>\r\n              </Form>\r\n            </Container>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n\r\n  handleItemSubmit(event) {\r\n    let itemType = parseInt(event.target.itemType.value)\r\n    let itemBrand = parseInt(event.target.itemBrand.value)\r\n    let itemName = event.target.itemName.value\r\n    let description = event.target.description.value\r\n    let itemSection = event.target.itemSection.value\r\n    let itemSize = event.target.itemSize.value\r\n    let itemPrice = parseFloat(event.target.itemPrice.value)\r\n    let itemImage = event.target.itemImage.value\r\n    let itemQuantity = event.target.itemQuantity.value\r\n    let sizeQuantityMap = this.getSizeQuantityMap(itemSize, itemQuantity)\r\n    let sizePriceMap = this.getSizePriceMap(itemSize, itemPrice)\r\n\r\n    const itemObj = {}\r\n    itemObj['name'] = itemName\r\n    itemObj['typeId'] = itemType\r\n    itemObj['sizeQuantityMap'] = sizeQuantityMap\r\n    itemObj['sizePriceMap'] = sizePriceMap\r\n    itemObj['description'] = description\r\n    itemObj['brandId'] = itemBrand\r\n    itemObj['section'] = itemSection\r\n\r\n    const item = JSON.stringify(itemObj)\r\n    let data = new FormData()\r\n    data.append(\r\n      'item',\r\n      new Blob([item], {\r\n        type: 'application/json',\r\n      }),\r\n    )\r\n    data.append('image', new Blob([itemImage]))\r\n    let url = 'http://localhost:8080/addItem'\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      body: data,\r\n    }\r\n    fetch(url, requestOptions)\r\n      .then((response) => {\r\n        alert('sucess')\r\n      })\r\n      .catch((err) => {\r\n        alert('error')\r\n      })\r\n  }\r\n  getSizeQuantityMap(itemSize, itemQuantity) {\r\n    let itemLst = itemSize.split(',')\r\n    let quantityLst = itemQuantity.split(',')\r\n    let sizeQuantityMap = {}\r\n    itemLst.forEach((element, index) => {\r\n      sizeQuantityMap[element] = parseInt(quantityLst[index])\r\n    })\r\n    return sizeQuantityMap\r\n  }\r\n\r\n  getSizePriceMap(itemSize, itemPrice) {\r\n    let itemLst = itemSize.split(',')\r\n    let sizePriceMap = {}\r\n    itemLst.forEach((element, index) => {\r\n      sizePriceMap[element] = itemPrice\r\n    })\r\n    return sizePriceMap\r\n  }\r\n\r\n  handleTypeSubmit(event) {\r\n    console.log(event.target.newType.value)\r\n    let newType = JSON.stringify(event.target.newType.value)\r\n    let img = event.target.typeImage.value\r\n    let url = 'http://localhost:8080/addType'\r\n\r\n    let data = new FormData()\r\n    data.append(\r\n      'type',\r\n      new Blob([newType], {\r\n        type: 'application/json',\r\n      }),\r\n    )\r\n    data.append('image', new Blob([img]))\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      body: data,\r\n    }\r\n    fetch(url, requestOptions)\r\n      .then((response) => {\r\n        alert('sucess')\r\n      })\r\n      .catch((err) => {\r\n        alert('error')\r\n      })\r\n  }\r\n\r\n  handleBrandSubmit(event) {\r\n    console.log(event.target.newBrand.value)\r\n    let newType = JSON.stringify(event.target.newBrand.value)\r\n    let img = event.target.brandImage.value\r\n    let logo = event.target.logoImage.value\r\n    let url = 'http://localhost:8080/addBrand'\r\n\r\n    let data = new FormData()\r\n    data.append(\r\n      'brand',\r\n      new Blob([newType], {\r\n        type: 'application/json',\r\n      }),\r\n    )\r\n    data.append('image', new Blob([img]))\r\n    data.append('logo', new Blob([logo]))\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      body: data,\r\n    }\r\n    fetch(url, requestOptions)\r\n      .then((response) => {\r\n        alert('sucess')\r\n      })\r\n      .catch((err) => {\r\n        alert('error')\r\n      })\r\n  }\r\n\r\n  getAllBrands(data) {\r\n    alert('GetAll')\r\n    return data.map((x, index) => {\r\n      return <option key={index}>{x.name}</option>\r\n    })\r\n  }\r\n\r\n  getAllTypes(data) {\r\n    return data.map((x, index) => {\r\n      console.log('x: ', x.name)\r\n      return (\r\n        <option key={index} value={x.id}>\r\n          {x.name.toUpperCase()}\r\n        </option>\r\n      )\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    let urlType = 'http://localhost:8080/getAllTypes'\r\n    let urlBrand = 'http://localhost:8080/getAllBrands'\r\n\r\n    const reqType = axios.get(urlType)\r\n    const reqBrand = axios.get(urlBrand)\r\n\r\n    axios\r\n      .all([reqType, reqBrand])\r\n      .then(\r\n        axios.spread((...responses) => {\r\n          this.setState({\r\n            types: responses[0].data,\r\n            brand: responses[1].data,\r\n          })\r\n        }),\r\n      )\r\n      .catch((errors) => {\r\n        // react on errors.\r\n        console.error(errors)\r\n      })\r\n  }\r\n}\r\n\r\nexport default AddItem\r\n","C:\\Users\\91815\\OneDrive\\Desktop\\project\\OMG_GUI\\src\\Components\\shopByCat.jsx",["76","77","78"],"import React, { Component } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport '../css/shopByCat.css'\r\nimport Image from 'react-bootstrap/Image'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass ShopByCat extends Component {\r\n  state = {\r\n    data: [\r\n      {\r\n        id: '',\r\n        name: '',\r\n        imgPath: '',\r\n      },\r\n    ],\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <p className=\"headerText\">SHOP CATAGORIES</p>\r\n        <Row>{this.getColumn(this.state.data.slice(0, 6))}</Row>\r\n        <Row>{this.getColumn(this.state.data.slice(6, 12))}</Row>\r\n      </Container>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    const targetUrl = 'http://localhost:8080/getAllTypes'\r\n    fetch(targetUrl, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (Response) => {\r\n          console.log(Response)\r\n          this.setState({\r\n            data: Response,\r\n          })\r\n        },\r\n        (error) => {\r\n          alert('error')\r\n        },\r\n      )\r\n  }\r\n  getColumn(data) {\r\n    return data.map((elm, index) => {\r\n      return (\r\n        <Col key={index}>\r\n          <Link to=\"/showItem\" typeId={elm.id}>\r\n            <img\r\n              className=\"imageFile\"\r\n              src={elm.imgPath}\r\n              className=\"imageFile\"\r\n            ></img>\r\n          </Link>\r\n          <p className=\"text-capitalize imageText font-weight-bold pt-1\">\r\n            {elm.name}\r\n          </p>\r\n        </Col>\r\n      )\r\n    })\r\n  }\r\n}\r\n\r\nexport default ShopByCat\r\n","C:\\Users\\91815\\OneDrive\\Desktop\\project\\OMG_GUI\\src\\Components\\shopByBrand.jsx",["79","80"],"import React, { Component } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport '../css/shopByBrand.css'\r\n\r\nclass ShopByBrand extends Component {\r\n  state = {\r\n    data: [\r\n      {\r\n        id: '',\r\n        name: '',\r\n        imgPath: '',\r\n        imgLogoPath: '',\r\n      },\r\n    ],\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <p className=\"headerText\">SHOP TOP BRANDS</p>\r\n        <Row>{this.getColumn(this.state.data.slice(0, 6))}</Row>\r\n        <Row>{this.getColumn(this.state.data.slice(6, 12))}</Row>\r\n      </Container>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    const targetUrl = 'http://localhost:8080/getAllBrand'\r\n    fetch(targetUrl, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (Response) => {\r\n          console.log(Response)\r\n          this.setState({\r\n            data: Response,\r\n          })\r\n        },\r\n        (error) => {\r\n          alert('error')\r\n        },\r\n      )\r\n  }\r\n  getColumn(data) {\r\n    return data.map((elm, index) => {\r\n      return (\r\n        <Col key={index}>\r\n          <Link to=\"/showItem\">\r\n            <img className=\"imageFile\" src={elm.imgPath}></img>\r\n          </Link>\r\n          <img src={elm.logoImgPath} className=\"brandLogo\"></img>\r\n        </Col>\r\n      )\r\n    })\r\n  }\r\n}\r\n\r\nexport default ShopByBrand\r\n","C:\\Users\\91815\\OneDrive\\Desktop\\project\\OMG_GUI\\src\\Components\\showItems.jsx",["81"],"import React, { Component } from 'react'\r\nimport { Row, Col, CheckBox, Container } from 'react-bootstrap'\r\nimport '../css/showItems.css'\r\nimport Item from './item'\r\n\r\nclass ShowItems extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleSectionClick = this.handleSectionClick.bind(this)\r\n  }\r\n  state = {\r\n    sections: [\r\n      { id: 1, value: 'MEN', isChecked: false },\r\n      { id: 2, value: 'WOMEN', isChecked: false },\r\n      { id: 3, value: 'BOYS', isChecked: false },\r\n      { id: 4, value: 'GIRLS', isChecked: false },\r\n    ],\r\n    items: [\r\n      {\r\n        id: 0,\r\n        name: null,\r\n        typeId: 0,\r\n        imgPath: null,\r\n        sizeQuantityMap: {},\r\n        sizePriceMap: {},\r\n        description: null,\r\n        brandId: 0,\r\n        section: null,\r\n      },\r\n    ],\r\n  }\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col sm=\"3\">\r\n          <Container>\r\n            <h3>FILTERS</h3>\r\n            <ul className=\"border\">\r\n              {this.state.sections.map((eachSection) => {\r\n                return (\r\n                  <li>\r\n                    <input\r\n                      key={eachSection.id}\r\n                      onClick={this.handleSectionClick}\r\n                      type=\"checkbox\"\r\n                      checked={eachSection.isChecked}\r\n                      value={eachSection.value}\r\n                    />{' '}\r\n                    {eachSection.value}\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n          </Container>\r\n        </Col>\r\n        <Col>\r\n          <Container>\r\n            <Row>{this.getAllItems(this.state.items)}</Row>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n  handleSectionClick(event) {\r\n    let sections = this.state.sections\r\n    sections.forEach((eachSection) => {\r\n      if (eachSection.value === event.target.value)\r\n        eachSection.isChecked = event.target.checked\r\n    })\r\n    this.setState({ sections: sections })\r\n  }\r\n\r\n  componentDidMount() {\r\n    alert(this.props)\r\n    const targetUrl = `http://localhost:8080/getItemsByType/${this.props.typeId}`\r\n    fetch(targetUrl, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (Response) => {\r\n          console.log(Response)\r\n          this.setState({\r\n            items: Response,\r\n          })\r\n        },\r\n        (error) => {\r\n          alert('error')\r\n        },\r\n      )\r\n  }\r\n  getAllItems(data) {\r\n    console.log(data)\r\n    return data.map((elm, index) => {\r\n      return <Item item={elm} />\r\n    })\r\n  }\r\n}\r\n\r\nexport default ShowItems\r\n","C:\\Users\\91815\\OneDrive\\Desktop\\project\\OMG_GUI\\src\\Components\\item.jsx",[],"C:\\Users\\91815\\OneDrive\\Desktop\\project\\OMG_GUI\\src\\Components\\login.jsx",["82","83","84","85","86","87","88"],"import React from 'react';\r\nimport {\r\n  NavLink,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n  BrowserRouter,\r\n  Link,\r\n  Router,\r\n} from 'react-router-dom';\r\n//import '../scss/login.scss'\r\n\r\nexport class Login extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n  return( \r\n    <div className=\"base-container\">\r\n      <div className=\"header\"> Login </div>\r\n      <div className=\"content\">\r\n        <div classname=\"image\">\r\n          {/* <img src ={loginImage} /> */}\r\n        </div>\r\n        <div className=\"form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Username</label>\r\n            <input type=\"text\" name=\"username\" placeholder=\"username\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"text\" name=\"password\" placeholder=\"password\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"footer\">\r\n        <button type=\"button\" className =\"btn\">\r\n          Login\r\n        </button>\r\n        </div>\r\n        <div className=\"signup\">\r\n        <Link to=\"/register\" className=\"nav-link\" href=\"#\">\r\n              if not login register now\r\n        </Link>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Login;","C:\\Users\\91815\\OneDrive\\Desktop\\project\\OMG_GUI\\src\\Components\\register.jsx",["89","90","91","92","93","94","95"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel,\r\n  Row,\r\n  Col,\r\n  Container,\r\n} from 'react-bootstrap'\r\n\r\n class Register extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.registerUser = this.registerUser.bind(this)\r\n  }\r\n \r\n  state = {\r\n    data : [{\r\n      name: \" \",\r\n      mobileNumber: \" \",\r\n      emaiId: \" \",\r\n      password: \" \",\r\n      confirmPassword:\" \"\r\n    }\r\n   ],\r\n  }\r\n\r\n  render(){\r\n  return( \r\n    <div className=\"base-container\">\r\n      <div className=\"header\"> Register </div>\r\n      <div className=\"content\">\r\n        <div classname=\"image\">\r\n        </div>\r\n        <Form className=\"form\" onSubmit={this.registerUser}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Username</label>\r\n            <input type=\"text\" name=\"userName\" placeholder=\"username\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"text\" name=\"userPassword\" placeholder=\"password\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" name=\"userEmail\" placeholder=\"email\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">mobileNumber</label>\r\n            <input type=\"text\" name=\"mobileNumber\" placeholder=\"test\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">confirmpassword</label>\r\n            <input type=\"text\" name=\"confirmpassword\" placeholder=\"email\" />\r\n          </div>\r\n          <div className=\"footer\">\r\n          <button >Click me</button>\r\n\r\n          </div>\r\n        </Form>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n\r\n  }\r\n  registerUser(event) {\r\n    alert(\"hello\");\r\n\r\n    let userName = event.target.userName.value\r\n    alert(userName)\r\n    let mobileNumber = parseInt(event.target.mobileNumber.value)\r\n    let userEmail = event.target.userEmail.value\r\n    let userPassword = event.target.userPassword.value\r\n    let confirmpassword = event.target.confirmpassword.value\r\n    \r\n\r\n    const userObj = {}\r\n    userObj['name'] = userName\r\n    userObj['mobileNumber'] = mobileNumber\r\n    userObj['emaiId'] = userEmail\r\n    userObj['password'] = userPassword\r\n    userObj['confirmPassword'] = confirmpassword\r\n\r\n    const user = JSON.stringify(userObj)\r\n    alert(user)\r\n    let data = new FormData()\r\n    data.append(\r\n      'user',\r\n      new Blob([user], {\r\n        type: 'application/json',\r\n      }),\r\n    )\r\n    let url = 'http://localhost:8080/registerUser'\r\n    alert(url)\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      header:{ 'content-type' : 'application/json'},\r\n      body: data,\r\n    }\r\n    axios.post('http://localhost:8080/registerUser', requestOptions)\r\n      .then(response => response.json()) \r\n      .catch((err) => {\r\n        alert('error in registration',err)\r\n      })\r\n  }\r\n}\r\nexport default Register;\r\n\r\n",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":17},{"ruleId":"100","severity":1,"message":"104","line":6,"column":8,"nodeType":"102","messageId":"103","endLine":6,"endColumn":19},{"ruleId":"100","severity":1,"message":"105","line":5,"column":3,"nodeType":"102","messageId":"103","endLine":5,"endColumn":10},{"ruleId":"100","severity":1,"message":"106","line":6,"column":3,"nodeType":"102","messageId":"103","endLine":6,"endColumn":8},{"ruleId":"100","severity":1,"message":"107","line":7,"column":3,"nodeType":"102","messageId":"103","endLine":7,"endColumn":11},{"ruleId":"100","severity":1,"message":"108","line":8,"column":3,"nodeType":"102","messageId":"103","endLine":8,"endColumn":9},{"ruleId":"100","severity":1,"message":"109","line":9,"column":3,"nodeType":"102","messageId":"103","endLine":9,"endColumn":16},{"ruleId":"100","severity":1,"message":"110","line":11,"column":3,"nodeType":"102","messageId":"103","endLine":11,"endColumn":9},{"ruleId":"100","severity":1,"message":"111","line":13,"column":8,"nodeType":"102","messageId":"103","endLine":13,"endColumn":15},{"ruleId":"112","severity":1,"message":"113","line":33,"column":13,"nodeType":"114","endLine":33,"endColumn":47},{"ruleId":"112","severity":1,"message":"113","line":38,"column":13,"nodeType":"114","endLine":38,"endColumn":47},{"ruleId":"112","severity":1,"message":"113","line":43,"column":13,"nodeType":"114","endLine":43,"endColumn":47},{"ruleId":"112","severity":1,"message":"113","line":81,"column":13,"nodeType":"114","endLine":81,"endColumn":46},{"ruleId":"100","severity":1,"message":"115","line":6,"column":3,"nodeType":"102","messageId":"103","endLine":6,"endColumn":12},{"ruleId":"100","severity":1,"message":"116","line":7,"column":3,"nodeType":"102","messageId":"103","endLine":7,"endColumn":14},{"ruleId":"100","severity":1,"message":"117","line":8,"column":3,"nodeType":"102","messageId":"103","endLine":8,"endColumn":15},{"ruleId":"100","severity":1,"message":"118","line":4,"column":8,"nodeType":"102","messageId":"103","endLine":4,"endColumn":13},{"ruleId":"119","severity":1,"message":"120","line":54,"column":13,"nodeType":"114","endLine":58,"endColumn":14},{"ruleId":"121","severity":1,"message":"122","line":57,"column":15,"nodeType":"123","endLine":57,"endColumn":36},{"ruleId":"119","severity":1,"message":"120","line":55,"column":13,"nodeType":"114","endLine":55,"endColumn":58},{"ruleId":"119","severity":1,"message":"120","line":57,"column":11,"nodeType":"114","endLine":57,"endColumn":60},{"ruleId":"100","severity":1,"message":"124","line":2,"column":20,"nodeType":"102","messageId":"103","endLine":2,"endColumn":28},{"ruleId":"100","severity":1,"message":"105","line":3,"column":3,"nodeType":"102","messageId":"103","endLine":3,"endColumn":10},{"ruleId":"100","severity":1,"message":"106","line":4,"column":3,"nodeType":"102","messageId":"103","endLine":4,"endColumn":8},{"ruleId":"100","severity":1,"message":"107","line":5,"column":3,"nodeType":"102","messageId":"103","endLine":5,"endColumn":11},{"ruleId":"100","severity":1,"message":"108","line":6,"column":3,"nodeType":"102","messageId":"103","endLine":6,"endColumn":9},{"ruleId":"100","severity":1,"message":"109","line":7,"column":3,"nodeType":"102","messageId":"103","endLine":7,"endColumn":16},{"ruleId":"100","severity":1,"message":"110","line":9,"column":3,"nodeType":"102","messageId":"103","endLine":9,"endColumn":9},{"ruleId":"125","severity":1,"message":"126","line":14,"column":3,"nodeType":"127","messageId":"128","endLine":16,"endColumn":4},{"ruleId":"100","severity":1,"message":"129","line":5,"column":3,"nodeType":"102","messageId":"103","endLine":5,"endColumn":9},{"ruleId":"100","severity":1,"message":"115","line":6,"column":3,"nodeType":"102","messageId":"103","endLine":6,"endColumn":12},{"ruleId":"100","severity":1,"message":"116","line":7,"column":3,"nodeType":"102","messageId":"103","endLine":7,"endColumn":14},{"ruleId":"100","severity":1,"message":"117","line":8,"column":3,"nodeType":"102","messageId":"103","endLine":8,"endColumn":15},{"ruleId":"100","severity":1,"message":"130","line":9,"column":3,"nodeType":"102","messageId":"103","endLine":9,"endColumn":6},{"ruleId":"100","severity":1,"message":"131","line":10,"column":3,"nodeType":"102","messageId":"103","endLine":10,"endColumn":6},{"ruleId":"100","severity":1,"message":"132","line":11,"column":3,"nodeType":"102","messageId":"103","endLine":11,"endColumn":12},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'ShopByCat' is defined but never used.","Identifier","unusedVar","'ShopByBrand' is defined but never used.","'NavLink' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'Switch' is defined but never used.","'BrowserRouter' is defined but never used.","'Router' is defined but never used.","'AddItem' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'FormGroup' is defined but never used.","'FormControl' is defined but never used.","'ControlLabel' is defined but never used.","'Image' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'CheckBox' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Button' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation"]