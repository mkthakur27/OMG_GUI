[{"C:\\GUI\\omg_gui\\src\\index.js":"1","C:\\GUI\\omg_gui\\src\\reportWebVitals.js":"2","C:\\GUI\\omg_gui\\src\\App.js":"3","C:\\GUI\\omg_gui\\src\\Components\\item.jsx":"4","C:\\GUI\\omg_gui\\src\\Components\\topMenuBar.jsx":"5","C:\\GUI\\omg_gui\\src\\Components\\shopByCat.jsx":"6","C:\\OMG_GUI\\src\\index.js":"7","C:\\OMG_GUI\\src\\reportWebVitals.js":"8","C:\\OMG_GUI\\src\\App.js":"9","C:\\OMG_GUI\\src\\Components\\topMenuBar.jsx":"10","C:\\OMG_GUI\\src\\Components\\shopByCat.jsx":"11","C:\\OMG_GUI\\src\\Components\\shopByBrand.jsx":"12","C:\\OMG_GUI\\src\\Components\\addItem.jsx":"13","C:\\OMG_GUI\\src\\Components\\home.jsx":"14"},{"size":547,"mtime":1609881850570,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":1229,"mtime":1610474305219,"results":"18","hashOfConfig":"16"},{"size":839,"mtime":1610182732584,"results":"19","hashOfConfig":"16"},{"size":2566,"mtime":1610382342210,"results":"20","hashOfConfig":"16"},{"size":1586,"mtime":1610396963601,"results":"21","hashOfConfig":"16"},{"size":547,"mtime":1609881850570,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":1604,"mtime":1611155463410,"results":"25","hashOfConfig":"23"},{"size":2957,"mtime":1611155590860,"results":"26","hashOfConfig":"23"},{"size":1586,"mtime":1610396963601,"results":"27","hashOfConfig":"23"},{"size":1448,"mtime":1610708235965,"results":"28","hashOfConfig":"23"},{"size":12295,"mtime":1611084710406,"results":"29","hashOfConfig":"23"},{"size":331,"mtime":1611155240288,"results":"30","hashOfConfig":"23"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"pksab3",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1r2en19",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"C:\\GUI\\omg_gui\\src\\index.js",[],["66","67"],"C:\\GUI\\omg_gui\\src\\reportWebVitals.js",[],"C:\\GUI\\omg_gui\\src\\App.js",[],"C:\\GUI\\omg_gui\\src\\Components\\item.jsx",[],["68","69"],"C:\\GUI\\omg_gui\\src\\Components\\topMenuBar.jsx",["70","71","72","73","74","75"],"import React, { Component } from 'react'\r\nimport '../css/topMenuBar.css'\r\nimport Image from 'react-bootstrap/Image'\r\n\r\nclass TopMenuBar extends Component {\r\n  state = {}\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-white fixed-top\">\r\n        {/* <li className=\"nav-item\"> */}\r\n        <a href=\"#\">\r\n          <Image\r\n            src={'./logo/omglogo.jpg'}\r\n            className=\"img-responsive pl-1\"\r\n            alt=\"LOGO\"\r\n          ></Image>\r\n        </a>\r\n        {/* </li> */}\r\n        <ul className=\"nav navbar-nav w-50\">\r\n          <li className=\"nav-item p-3\">\r\n            <a className=\"nav-link \" href=\"#\">\r\n              <dt>MEN</dt>\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item p-3\">\r\n            <a className=\"nav-link \" href=\"#\">\r\n              <dt>WOMEN</dt>\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item p-3\">\r\n            <a className=\"nav-link \" href=\"#\">\r\n              <dt>KIDS</dt>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"nav navbar-nav ml-auto\">\r\n          <li className=\"nav-item pt-2 \">\r\n            <form className=\"navbar-form\" role=\"search\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Search\"\r\n                  name=\"srch-term\"\r\n                  id=\"srch-term\"\r\n                />\r\n                <div className=\"input-group-btn\">\r\n                  <button className=\"btn btn-default\" type=\"submit\">\r\n                    <Image\r\n                      src=\"../logo/search.png\"\r\n                      style={{ width: '25px', height: '25px' }}\r\n                    ></Image>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </li>\r\n          <li className=\"nav-item pt-2\">\r\n            <a className=\"nav-link\" href=\"#\">\r\n              <Image\r\n                src=\"../logo/profile_icon.jpg\"\r\n                style={{ width: '25px', height: '25px' }}\r\n              ></Image>\r\n              Profile\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item pt-2\">\r\n            <a className=\"nav-link\" href=\"#\">\r\n              <Image\r\n                src=\"../logo/bag_icon_2.png\"\r\n                style={{ width: '25px', height: '25px', float: 'left' }}\r\n              ></Image>\r\n              Bag\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TopMenuBar\r\n","C:\\GUI\\omg_gui\\src\\Components\\shopByCat.jsx",["76","77","78","79"],"import React, { Component } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport '../css/shopByCat.css'\r\nimport Image from 'react-bootstrap/Image'\r\n\r\nclass ShopByCat extends Component {\r\n  state = {\r\n    data: [\r\n      {\r\n        id: '',\r\n        name: '',\r\n        imgPath: '',\r\n      },\r\n    ],\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <p className=\"headerText\">SHOP CATAGORIES</p>\r\n        <Row>{this.getColumn(this.state.data.slice(0, 6))}</Row>\r\n        <Row>{this.getColumn(this.state.data.slice(6, 12))}</Row>\r\n      </Container>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    const targetUrl = 'http://localhost:8080/getAllTypes'\r\n    fetch(targetUrl, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (Response) => {\r\n          console.log(Response)\r\n          this.setState({\r\n            data: Response,\r\n          })\r\n        },\r\n        (error) => {\r\n          alert('error')\r\n        },\r\n      )\r\n  }\r\n  getColumn(data) {\r\n    return data.map((elm, index) => {\r\n      return (\r\n        <Col key={index}>\r\n          <a href=\"#\">\r\n            <img\r\n              className=\"imageFile\"\r\n              src={elm.imgPath}\r\n              className=\"imageFile\"\r\n            ></img>\r\n          </a>\r\n          <p className=\"text-capitalize imageText font-weight-bold pt-1\">\r\n            {elm.name}\r\n          </p>\r\n        </Col>\r\n      )\r\n    })\r\n  }\r\n}\r\n\r\nexport default ShopByCat\r\n","C:\\OMG_GUI\\src\\index.js",[],["80","81"],"C:\\OMG_GUI\\src\\reportWebVitals.js",[],"C:\\OMG_GUI\\src\\App.js",["82","83"],"C:\\OMG_GUI\\src\\Components\\topMenuBar.jsx",["84","85","86","87","88","89","90","91","92","93","94","95"],"C:\\OMG_GUI\\src\\Components\\shopByCat.jsx",["96","97","98","99"],"C:\\OMG_GUI\\src\\Components\\shopByBrand.jsx",["100","101","102"],"import React, { Component } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport '../css/shopByBrand.css'\r\n\r\nclass ShopByBrand extends Component {\r\n  state = {\r\n    data: [\r\n      {\r\n        id: '',\r\n        name: '',\r\n        imgPath: '',\r\n        imgLogoPath: '',\r\n      },\r\n    ],\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <p className=\"headerText\">SHOP TOP BRANDS</p>\r\n        <Row>{this.getColumn(this.state.data.slice(0, 6))}</Row>\r\n        <Row>{this.getColumn(this.state.data.slice(6, 12))}</Row>\r\n      </Container>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    const targetUrl = 'http://localhost:8080/getAllBrand'\r\n    fetch(targetUrl, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (Response) => {\r\n          console.log(Response)\r\n          this.setState({\r\n            data: Response,\r\n          })\r\n        },\r\n        (error) => {\r\n          alert('error')\r\n        },\r\n      )\r\n  }\r\n  getColumn(data) {\r\n    return data.map((elm, index) => {\r\n      return (\r\n        <Col key={index}>\r\n          <a href=\"#\">\r\n            <img className=\"imageFile\" src={elm.imgPath}></img>\r\n          </a>\r\n          <img src={elm.logoImgPath} className=\"brandLogo\"></img>\r\n        </Col>\r\n      )\r\n    })\r\n  }\r\n}\r\n\r\nexport default ShopByBrand\r\n","C:\\OMG_GUI\\src\\Components\\addItem.jsx",["103","104","105"],"import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport {\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel,\r\n  Row,\r\n  Col,\r\n  Container,\r\n} from 'react-bootstrap'\r\nimport '../css/addItem.css'\r\n\r\nclass AddItem extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleItemSubmit = this.handleItemSubmit.bind(this)\r\n    this.getSizeQuantityMap = this.getSizeQuantityMap.bind(this)\r\n    this.getSizePriceMap = this.getSizePriceMap.bind(this)\r\n  }\r\n  state = {\r\n    types: [\r\n      {\r\n        id: '',\r\n        name: '',\r\n      },\r\n    ],\r\n    brand: [\r\n      {\r\n        id: '',\r\n        name: '',\r\n      },\r\n    ],\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Container>\r\n              <div className=\"addItemForm\">\r\n                <Form onSubmit={this.handleItemSubmit}>\r\n                  <Form.Group>\r\n                    <Form.Row>\r\n                      <Form.Label column=\"sm\">TYPE</Form.Label>\r\n                      <Col>\r\n                        <Form.Control size=\"sm\" as=\"select\" name=\"itemType\">\r\n                          {this.getAllTypes(this.state.types)}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Row>\r\n                      <Form.Label column=\"sm\">BRAND</Form.Label>\r\n                      <Col>\r\n                        <Form.Control size=\"sm\" as=\"select\" name=\"itemBrand\">\r\n                          {this.getAllTypes(this.state.brand)}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group>\r\n                    <Form.Row>\r\n                      <Form.Label column=\"sm\">NAME</Form.Label>\r\n                      <Col>\r\n                        <Form.Control size=\"sm\" type=\"text\" name=\"itemName\" />\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group>\r\n                    <Form.Row>\r\n                      <Form.Label column=\"sm\">DESCRIPTION</Form.Label>\r\n                      <Col>\r\n                        <Form.Control\r\n                          size=\"sm\"\r\n                          type=\"text\"\r\n                          name=\"description\"\r\n                        />\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Row>\r\n                      <Form.Label column=\"sm\">SECTION</Form.Label>\r\n                      <Col>\r\n                        <Form.Control size=\"sm\" as=\"select\" name=\"itemSection\">\r\n                          <option>MEN</option>\r\n                          <option>WOMEN</option>\r\n                          <option>BOYS</option>\r\n                          <option>GIRLS</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group>\r\n                    <Form.Row>\r\n                      <Form.Label column=\"sm\">SIZE AVAILABLE</Form.Label>\r\n                      <Col>\r\n                        <Form.Control\r\n                          size=\"sm\"\r\n                          type=\"text\"\r\n                          placeholder=\"Enter size in format x,y,z\"\r\n                          name=\"itemSize\"\r\n                        />\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Row>\r\n                      <Form.Label column=\"sm\">\r\n                        QUANTITY AVAILABLE FOR SIZE\r\n                      </Form.Label>\r\n                      <Col>\r\n                        <Form.Control\r\n                          size=\"sm\"\r\n                          type=\"text\"\r\n                          placeholder=\"Enter quantity in format x,y,z\"\r\n                          name=\"itemQuantity\"\r\n                        />\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Row>\r\n                      <Form.Label column=\"sm\">PRICE</Form.Label>\r\n                      <Col>\r\n                        <Form.Control size=\"sm\" type=\"text\" name=\"itemPrice\" />\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Row>\r\n                      <Form.Label column=\"sm\">SELECT IMAGE</Form.Label>\r\n                      <Col>\r\n                        <Form.File name=\"itemImage\" />\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Row>\r\n                      <Form.Label column=\"sm\"></Form.Label>\r\n                      <Col>\r\n                        <Button type=\"submit\">SUBMIT</Button>\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n            </Container>\r\n          </Col>\r\n          <Col>\r\n            <Container>\r\n              <Form onSubmit={this.handleTypeSubmit}>\r\n                <Form.Group>\r\n                  <Form.Row>\r\n                    <Form.Label column=\"sm\">ADD NEW TYPE</Form.Label>\r\n                    <Col>\r\n                      <Form.Control size=\"sm\" type=\"text\" name=\"newType\" />\r\n                    </Col>\r\n                  </Form.Row>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Row>\r\n                    <Form.Label column=\"sm\">\r\n                      SELECT SAMPLE IMAGE FOR NEW TYPE\r\n                    </Form.Label>\r\n                    <Col>\r\n                      <Form.File name=\"typeImage\" />\r\n                    </Col>\r\n                  </Form.Row>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Row>\r\n                    <Form.Label column=\"sm\"></Form.Label>\r\n                    <Col>\r\n                      <Button type=\"submit\">SUBMIT</Button>\r\n                    </Col>\r\n                  </Form.Row>\r\n                </Form.Group>\r\n              </Form>\r\n\r\n              <Form onSubmit={this.handleBrandSubmit}>\r\n                <Form.Group>\r\n                  <Form.Row>\r\n                    <Form.Label column=\"sm\">ADD NEW BRAND</Form.Label>\r\n                    <Col>\r\n                      <Form.Control size=\"sm\" type=\"text\" name=\"newBrand\" />\r\n                    </Col>\r\n                  </Form.Row>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Row>\r\n                    <Form.Label column=\"sm\">\r\n                      SELECT SAMPLE IMAGE FOR NEW BRAND\r\n                    </Form.Label>\r\n                    <Col>\r\n                      <Form.File name=\"brandImage\" />\r\n                    </Col>\r\n                  </Form.Row>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Row>\r\n                    <Form.Label column=\"sm\">SELECT BRAND LOGO</Form.Label>\r\n                    <Col>\r\n                      <Form.File name=\"logoImage\" />\r\n                    </Col>\r\n                  </Form.Row>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Row>\r\n                    <Form.Label column=\"sm\"></Form.Label>\r\n                    <Col>\r\n                      <Button type=\"submit\">SUBMIT</Button>\r\n                    </Col>\r\n                  </Form.Row>\r\n                </Form.Group>\r\n              </Form>\r\n            </Container>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n\r\n  handleItemSubmit(event) {\r\n    let itemType = parseInt(event.target.itemType.value)\r\n    let itemBrand = parseInt(event.target.itemBrand.value)\r\n    let itemName = event.target.itemName.value\r\n    let description = event.target.description.value\r\n    let itemSection = event.target.itemSection.value\r\n    let itemSize = event.target.itemSize.value\r\n    let itemPrice = parseFloat(event.target.itemPrice.value)\r\n    let itemImage = event.target.itemImage.value\r\n    let itemQuantity = event.target.itemQuantity.value\r\n    let sizeQuantityMap = this.getSizeQuantityMap(itemSize, itemQuantity)\r\n    let sizePriceMap = this.getSizePriceMap(itemSize, itemPrice)\r\n\r\n    const itemObj = {}\r\n    itemObj['name'] = itemName\r\n    itemObj['typeId'] = itemType\r\n    itemObj['sizeQuantityMap'] = sizeQuantityMap\r\n    itemObj['sizePriceMap'] = sizePriceMap\r\n    itemObj['description'] = description\r\n    itemObj['brandId'] = itemBrand\r\n    itemObj['section'] = itemSection\r\n\r\n    const item = JSON.stringify(itemObj)\r\n    let data = new FormData()\r\n    data.append(\r\n      'item',\r\n      new Blob([item], {\r\n        type: 'application/json',\r\n      }),\r\n    )\r\n    data.append('image', new Blob([itemImage]))\r\n    let url = 'http://localhost:8080/addItem'\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      body: data,\r\n    }\r\n    fetch(url, requestOptions)\r\n      .then((response) => {\r\n        alert('sucess')\r\n      })\r\n      .catch((err) => {\r\n        alert('error')\r\n      })\r\n  }\r\n  getSizeQuantityMap(itemSize, itemQuantity) {\r\n    let itemLst = itemSize.split(',')\r\n    let quantityLst = itemQuantity.split(',')\r\n    let sizeQuantityMap = {}\r\n    itemLst.forEach((element, index) => {\r\n      sizeQuantityMap[element] = parseInt(quantityLst[index])\r\n    })\r\n    return sizeQuantityMap\r\n  }\r\n\r\n  getSizePriceMap(itemSize, itemPrice) {\r\n    let itemLst = itemSize.split(',')\r\n    let sizePriceMap = {}\r\n    itemLst.forEach((element, index) => {\r\n      sizePriceMap[element] = itemPrice\r\n    })\r\n    return sizePriceMap\r\n  }\r\n\r\n  handleTypeSubmit(event) {\r\n    console.log(event.target.newType.value)\r\n    let newType = JSON.stringify(event.target.newType.value)\r\n    let img = event.target.typeImage.value\r\n    let url = 'http://localhost:8080/addType'\r\n\r\n    let data = new FormData()\r\n    data.append(\r\n      'type',\r\n      new Blob([newType], {\r\n        type: 'application/json',\r\n      }),\r\n    )\r\n    data.append('image', new Blob([img]))\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      body: data,\r\n    }\r\n    fetch(url, requestOptions)\r\n      .then((response) => {\r\n        alert('sucess')\r\n      })\r\n      .catch((err) => {\r\n        alert('error')\r\n      })\r\n  }\r\n\r\n  handleBrandSubmit(event) {\r\n    console.log(event.target.newBrand.value)\r\n    let newType = JSON.stringify(event.target.newBrand.value)\r\n    let img = event.target.brandImage.value\r\n    let logo = event.target.logoImage.value\r\n    let url = 'http://localhost:8080/addBrand'\r\n\r\n    let data = new FormData()\r\n    data.append(\r\n      'brand',\r\n      new Blob([newType], {\r\n        type: 'application/json',\r\n      }),\r\n    )\r\n    data.append('image', new Blob([img]))\r\n    data.append('logo', new Blob([logo]))\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      body: data,\r\n    }\r\n    fetch(url, requestOptions)\r\n      .then((response) => {\r\n        alert('sucess')\r\n      })\r\n      .catch((err) => {\r\n        alert('error')\r\n      })\r\n  }\r\n\r\n  getAllBrands(data) {\r\n    alert('GetAll')\r\n    return data.map((x, index) => {\r\n      return <option key={index}>{x.name}</option>\r\n    })\r\n  }\r\n\r\n  getAllTypes(data) {\r\n    return data.map((x, index) => {\r\n      console.log('x: ', x.name)\r\n      return (\r\n        <option key={index} value={x.id}>\r\n          {x.name.toUpperCase()}\r\n        </option>\r\n      )\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    let urlType = 'http://localhost:8080/getAllTypes'\r\n    let urlBrand = 'http://localhost:8080/getAllBrand'\r\n\r\n    const reqType = axios.get(urlType)\r\n    const reqBrand = axios.get(urlBrand)\r\n\r\n    axios\r\n      .all([reqType, reqBrand])\r\n      .then(\r\n        axios.spread((...responses) => {\r\n          this.setState({\r\n            types: responses[0].data,\r\n            brand: responses[1].data,\r\n          })\r\n        }),\r\n      )\r\n      .catch((errors) => {\r\n        // react on errors.\r\n        console.error(errors)\r\n      })\r\n  }\r\n}\r\n\r\nexport default AddItem\r\n","C:\\OMG_GUI\\src\\Components\\home.jsx",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"106","replacedBy":"110"},{"ruleId":"108","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":11,"column":9,"nodeType":"114","endLine":11,"endColumn":21},{"ruleId":"112","severity":1,"message":"113","line":21,"column":13,"nodeType":"114","endLine":21,"endColumn":47},{"ruleId":"112","severity":1,"message":"113","line":26,"column":13,"nodeType":"114","endLine":26,"endColumn":47},{"ruleId":"112","severity":1,"message":"113","line":31,"column":13,"nodeType":"114","endLine":31,"endColumn":47},{"ruleId":"112","severity":1,"message":"113","line":60,"column":13,"nodeType":"114","endLine":60,"endColumn":46},{"ruleId":"112","severity":1,"message":"113","line":69,"column":13,"nodeType":"114","endLine":69,"endColumn":46},{"ruleId":"115","severity":1,"message":"116","line":4,"column":8,"nodeType":"117","messageId":"118","endLine":4,"endColumn":13},{"ruleId":"112","severity":1,"message":"113","line":52,"column":11,"nodeType":"114","endLine":52,"endColumn":23},{"ruleId":"119","severity":1,"message":"120","line":53,"column":13,"nodeType":"114","endLine":57,"endColumn":14},{"ruleId":"121","severity":1,"message":"122","line":56,"column":15,"nodeType":"123","endLine":56,"endColumn":36},{"ruleId":"106","replacedBy":"124"},{"ruleId":"108","replacedBy":"125"},{"ruleId":"115","severity":1,"message":"126","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":17},{"ruleId":"115","severity":1,"message":"127","line":6,"column":8,"nodeType":"117","messageId":"118","endLine":6,"endColumn":19},{"ruleId":"115","severity":1,"message":"128","line":5,"column":3,"nodeType":"117","messageId":"118","endLine":5,"endColumn":10},{"ruleId":"115","severity":1,"message":"129","line":6,"column":3,"nodeType":"117","messageId":"118","endLine":6,"endColumn":8},{"ruleId":"115","severity":1,"message":"130","line":7,"column":3,"nodeType":"117","messageId":"118","endLine":7,"endColumn":11},{"ruleId":"115","severity":1,"message":"131","line":8,"column":3,"nodeType":"117","messageId":"118","endLine":8,"endColumn":9},{"ruleId":"115","severity":1,"message":"132","line":9,"column":3,"nodeType":"117","messageId":"118","endLine":9,"endColumn":16},{"ruleId":"115","severity":1,"message":"133","line":11,"column":3,"nodeType":"117","messageId":"118","endLine":11,"endColumn":9},{"ruleId":"115","severity":1,"message":"134","line":13,"column":8,"nodeType":"117","messageId":"118","endLine":13,"endColumn":15},{"ruleId":"112","severity":1,"message":"113","line":33,"column":13,"nodeType":"114","endLine":33,"endColumn":47},{"ruleId":"112","severity":1,"message":"113","line":38,"column":13,"nodeType":"114","endLine":38,"endColumn":47},{"ruleId":"112","severity":1,"message":"113","line":43,"column":13,"nodeType":"114","endLine":43,"endColumn":47},{"ruleId":"112","severity":1,"message":"113","line":72,"column":13,"nodeType":"114","endLine":72,"endColumn":46},{"ruleId":"112","severity":1,"message":"113","line":81,"column":13,"nodeType":"114","endLine":81,"endColumn":46},{"ruleId":"115","severity":1,"message":"116","line":4,"column":8,"nodeType":"117","messageId":"118","endLine":4,"endColumn":13},{"ruleId":"112","severity":1,"message":"113","line":52,"column":11,"nodeType":"114","endLine":52,"endColumn":23},{"ruleId":"119","severity":1,"message":"120","line":53,"column":13,"nodeType":"114","endLine":57,"endColumn":14},{"ruleId":"121","severity":1,"message":"122","line":56,"column":15,"nodeType":"123","endLine":56,"endColumn":36},{"ruleId":"112","severity":1,"message":"113","line":53,"column":11,"nodeType":"114","endLine":53,"endColumn":23},{"ruleId":"119","severity":1,"message":"120","line":54,"column":13,"nodeType":"114","endLine":54,"endColumn":58},{"ruleId":"119","severity":1,"message":"120","line":56,"column":11,"nodeType":"114","endLine":56,"endColumn":60},{"ruleId":"115","severity":1,"message":"135","line":6,"column":3,"nodeType":"117","messageId":"118","endLine":6,"endColumn":12},{"ruleId":"115","severity":1,"message":"136","line":7,"column":3,"nodeType":"117","messageId":"118","endLine":7,"endColumn":14},{"ruleId":"115","severity":1,"message":"137","line":8,"column":3,"nodeType":"117","messageId":"118","endLine":8,"endColumn":15},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],["138"],["139"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["138"],["139"],"'ShopByCat' is defined but never used.","'ShopByBrand' is defined but never used.","'NavLink' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'Switch' is defined but never used.","'BrowserRouter' is defined but never used.","'Router' is defined but never used.","'AddItem' is defined but never used.","'FormGroup' is defined but never used.","'FormControl' is defined but never used.","'ControlLabel' is defined but never used.","no-global-assign","no-unsafe-negation"]